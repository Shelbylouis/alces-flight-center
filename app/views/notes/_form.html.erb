<% content_for(:subtitle) { note.title } %>

<div class="card-body">
  <%= form_for note.form_path do |f| %>
    <% if policy %>

      <div class="form-group">
        <label for="note_title">Title</label>
        <%=
          f.text_field :title,
                       class: 'form-control'
        %>
      </div>

      <%= render 'partials/markdown_editor_layout',
            activate: 'write',
            form_builder: f,
            preview_path: preview_cluster_notes_path,
            write_path: write_cluster_notes_path do %>

        <%= render 'partials/markdown_content',
                   form_builder: f,
                   field: :description,
                   options: {
                       rows: 10
                   }
        %>

      <% end %>

      <% if can_set_visibility %>
        <div class="form-group">
          <label for="note_visibility">Visibility</label>
          <%=
            f.select :visibility,
                     [['Customer and engineer', 'customer'], ['Engineers only', 'engineer']],
                     {},
                     class: 'form-control'
          %>
        </div>
      <% else %>
        <%= f.hidden_field :visibility %>
      <% end %>

    <% end %>
    <div class="form-group" style="overflow: hidden;">
      <%#
          The only time this should be rendered with a `policy` of `false` is
          in the `new` case when the `current_user` can't perform the action of
          the form, since users who cannot edit cannot access the edit page. If
          this ever changes then we may want to adjust the create-specific text
          below.
      %>
      <%= f.submit button_text,
        PolicyDependentOptions.wrap(
          {class: dark_button_classes},
          policy: policy,
          action_description: 'create cluster notes',
          user: current_user
      )
      %>
    </div>
  <% end %>
</div>
