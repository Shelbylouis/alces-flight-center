/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 *= require bootstrap-datepicker
 */


.page-container {
  margin-top: 1rem;
  padding-bottom: 3rem;
}

.card {
  margin-top: 1rem;
  margin-bottom: 1rem;

  .card-header {
    li {
      margin-right: 0.5rem;
    }
  }

  &.title-card {
    margin-top: 0;
    margin-bottom: 0;
    text-align: center;
    border-radius: 0;
  }
}

.navbar-text {
  margin-right: 0.5rem;
}

body {
  // Always show scroll bar, to avoid flash of sideways shifting page content
  // if this changes to cross threshold where scrollbar would be needed while
  // using app.
  overflow-y: scroll;
}

// Override Bootstrap setting `pointer-events: none` on disabled button links
// (see https://github.com/twbs/bootstrap/issues/17703), so title text on these
// links is shown and cursor changes appropriately.
a.btn.disabled {
  pointer-events: auto !important;

  // Prevent default Bootstrap styling of focused button link (so should appear
  // same as if unfocused).
  &:focus {
    box-shadow: none !important;
  }
}

// Do not change text colour of disabled buttons/button links on hover, since
// this implies they could be interacted with. This is not completely ideal as
// this overrides the non-disabled button text colour, but I couldn't find
// another way to do this which consistently works across every button type
// (`button`/`a`/`input`) and style (`btn-primary`/`btn-warning` etc.).
.btn.disabled {
  &, &:hover {
    color: white !important;
  }
}

.elm-overlay {
  // So Elm debugger always appears on top in development.
  z-index: 10000;
}

.icon {
  width: 100%;
  text-align: center;
  color: black;
}

.interactive-icon {
  @extend .icon;

  &:hover {
    opacity: 0.6;
  }
}

.fa.inline-icon {
  display: inline;
}

.faded-icon {
  opacity: 0.6;
}

#development-ribbon {
  .ribbon-holder {
    // Ribbon to indicate development site running should always appear on top.
    z-index: 9999;
    position: fixed !important;
    pointer-events: none;
  }
}

.nowrap {
  white-space: nowrap;
}

table {
  .expand {
    width: 99%
  }
}

[onclick] {
  cursor: pointer;
}

.alert a.btn {
  text-decoration: none;
}

.version {
  font-size: 13px;
  color: white;
  margin-bottom: 0; // Remove default margin from p element

  // This should push the text to the bottom right of the page within the
  // footer
  position: relative;
  float: right;
  top: -2.2em;
  right: 1em;
}

.btn-group-stretch {
  display: flex;

  button, a, input {
    flex-grow: 1;
    margin-left: 1rem;

    &:first-child {
      margin-left: 0;
    }
  }
}

a.filter {
  cursor: pointer;

  &.filter-inactive {
    color: black;
  }
}

.nav-item-text {
  padding: 0.375rem 0.75rem;
  font-size: .9375rem;
  line-height: 1.5;
}


.nav-item .btn {
  display: block;
  width: 100%;
}

.product-bar {
  .dropdown-item {
    color: white;
  }

  .nav-item .dropdown-toggle {
    padding: 0.5rem;
    margin-right: -1rem;
  }
}

.markdown-modal {
  text-align: center;

  .modal-dialog {
    overflow-x: auto;

    table {
      text-align:left;
      width: 100%;

      tr {
        border-top: 1px solid;
        border-bottom: 1px solid;

        td {
          padding: 3px;
          padding-left: 10px;

          ul {
            padding-left: 10px;
          }
        }
      }
    }
  }
}
